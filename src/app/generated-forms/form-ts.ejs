import { Component, OnInit } from '@angular/core';
import { FormControl, FormGroup} from '@angular/forms';
import { ServerService } from '../services/server.service';
import { ToastController } from '@ionic/angular';
import { Router } from '@angular/router';

@Component({
  selector: 'app-form-n<%=formNumber %>',
  templateUrl: './form-n<%=formNumber %>.component.html',
  styleUrls: ['./form-n<%=formNumber %>.component.scss'],
})
export class <%='FormN' + formNumber + 'Component'%> implements OnInit {

  formId = '<%=id %>';

  notification = <%=show_notification %>;

  location = <%=get_location %>;

  generatedForm = new FormGroup ({
    <%_ questions.forEach((question) => { _%>
    <%= question.id %>: new FormControl(),
    <%_ }); _%>
  });

  <%_ questions.forEach((question) => {
    if(question.hasOwnProperty('options')){ _%>
  <%= question.id %>_options = [
      <%_ if(question.type === 'checkbox'){
        question.options.forEach((option) => { _%>
    {val: '<%= option %>', isChecked: false},
        <%_ });
      } else {
        question.options.forEach((option) => { _%>
    '<%= option %>',
        <%_ });
      } _%>
  ];
    <%_ }
  }); _%>

  constructor(private serverService: ServerService, public toastController: ToastController, public router: Router) { }

  ngOnInit() { }

  printForm() {
    console.log(this.generatedForm.value);
  }

  submitForm() {
    console.log(this.generatedForm.value);
    if (this.location) {
      navigator.geolocation.getCurrentPosition(geolocation => {
        this.generatedForm.value.locationLon = geolocation.coords.longitude;
        this.generatedForm.value.locationLat = geolocation.coords.latitude;
        this.serverService.sendForm(this.formId, this.generatedForm.value);
      }, err => {
        this.serverService.sendForm(this.formId, this.generatedForm.value);
      });
    } else {
      this.serverService.sendForm(this.formId, this.generatedForm.value);
    }
    this.presentToast();
    this.router.navigateByUrl('#/tabs/tab1');
    if (this.notification) {
      Notification.requestPermission();
    }
  }

  async presentToast() {
    const toast = await this.toastController.create({
      message: 'Resposta salva.',
      duration: 2000
    });
    toast.present();
  }
}
